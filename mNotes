#!/usr/bin/env bash
#: Title          :
#: Date           :
#: Author         : Rafael Baez
#: Version        : 1.0
#: Description    :
#: Options        :
# ------------------------------------------------------------------------------
function help() {
  echo "Usage: $(basename "$0") [OPTIONS] [arg ...]"
  echo "--help                  Display help"
  echo "--version               Display version of script"
  echo "--print                 Print arguments"
}

function version() {
  echo "Version of shell script application is 2.0"
}

function print() {
  echo "Arguments are: "$*""
}
# ------------------------------------------------------------------------------
# Variables
# ------------------------------------------------------------------------------
ndate=$(date +%m.%d.%y)
nmonth=$(date +%B)
ntime=$(date +%X)
nyear=$(date +%Y)
NDIR="$HOME/Documents/Notes"
if [[ -d "$NDIR" ]]; then
  mkdir -p $NDIR
fi

_shell() { # Start Shell Notes!! BASH!!
  if [[ ! -d "$NDIR/BASH" ]]; then
    mkdir -p "$NDIR/BASH" && cd "$NDIR/BASH"
    touch $ndate
    echo $ntime >>$ndate
    nano -$ "$ndate"
  else
    cd "$NDIR/BASH"
    touch $ndate
    echo $ntime >>$ndate
    nano -$ "$ndate"
  fi
}

_python() { # Start Shell Notes!! BASH!!
  if [[ ! -d "$NDIR/PYTHON" ]]; then
    mkdir -p "$NDIR/PYTHON" && cd "$NDIR/PYTHON"
    touch $ndate
    echo $ntime >>$ndate
    nano -$ "$ndate"
  else
    cd "$NDIR/PYTHON"
    touch $ndate
    echo $ntime >>$ndate
    nano -$ "$ndate"
  fi
}

_cpp() { # Start Shell Notes!! BASH!!
  if [[ ! -d "$NDIR/CC+" ]]; then
    mkdir -p "$NDIR/CC+" && cd "$NDIR/CC+"
    touch $ndate
    echo $ntime >>$ndate
    nano -$ "$ndate"
  else
    cd "$NDIR/CC+"
    touch $ndate
    echo $ntime >>$ndate
    nano -$ "$ndate"
  fi
}
# ------------------------------------------------------------------------------
# Parsing command line arguments
if [[ "$@" == "" ]]; then
  echo "No Paramater Supplied!"
  echo "$(basename "$0") requires an argument!"
elif [[ $* != "" ]]; then
  case $* in
  --h | --help | help)
    help
    exit 1
    ;;
  --v | --version | version)
    version
    exit 1
    ;;
  --p | --print | print)
    print "$@"
    exit 1
    ;;
  --shell | shell)
    _shell
    exit 1
    ;;
  --python | python)
    _python
    exit 1
    ;;
  --cc | cc)
    _cpp
    exit 1
    ;;
  *)
    echo "Invalid Option: "$*"" 1>&2
    echo
    echo "Try --help for more options." 1>&2
    exit 1
    ;;
  esac
fi
